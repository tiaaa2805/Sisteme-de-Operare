#include<stdint.h>
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include <fcntl.h>
#include <sys/stat.h>
#include<string.h>
#define MAX 50
#define MAXCLUE 200
#define MAXSTR 200
typedef struct{
  float longitudine;
  float latitudine;
}gps;
typedef struct{
  int id;
  char name[MAX];
  gps coordonate;
  char clue[200];
  int value;
}treasure;
int createdir(const char *hunt)
{char sir[MAXSTR];
  snprintf(sir,MAXSTR,"%s%s","/treasure_manager/", hunt);
 
  int pp=mkdir(sir,0777)
}
void add(treasure tr, const char *hunt)
{
  
}
int main(int argc, char **argv)
{
  if(argc<3)
    {printf("Va rog introduceti numarul corect de argumente");
      return 1;
    }
  char *operatia=argv[1];
  char *hunt=argv[2];
  if(strcmp(operatia,"add")==0)
    {
      treasure tr;
      printf("Introduceti id ul\n");
      scanf("%d",&tr.id);
      printf("Introduceti numele \n");
      scanf("%s",tr.name);
      printf("coordonatele corecte \n");
      scanf("%f %f", &tr.coordonate.longitudine, &tr.coordonate.latitudine);
      printf("introduceti indiciul\n ");
      getchar();
      fgets(tr.clue,200,stdin);
      printf("introduceti value \n");
      scanf("%d", &tr.value);
    }
  if(strcmp(operatia,"list")==0)
    {
    }
  if(strcmp(operatia,"view")==0)
    {
    }
  if(strcmp(operatia,"remove_hunt")==0)
    {
    }
  if(strcmp(operatia,"remove_treasure")==0)
    {
    }
  
  
  return 0;
}
